name: Release

on:
  push:
    tags:
    - '*'

jobs:
  release:
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v2
    - name: Run script file
      id: build-release
      run: |
        docker run --rm -e NODE_VERSION=16 -v $(pwd):/ext  -w /ext shopware/shopware-cli extension zip --disable-git /ext

        zipfile=$(find "$(pwd)" -maxdepth 1 -name "*.zip" | head -n 1)
        if [[ -z "$zipfile" ]]; then
          echo "No zip file found!"
          exit 1
        fi

        filename=$(basename "$zipfile")

        echo "filepath=$zipfile" >> $GITHUB_OUTPUT
        echo "filename=$filename" >> $GITHUB_OUTPUT

        t=$(cat docs/source/changelog.rst  | php -r 'preg_match_all("#([v\d\.]+)\n[-]+\n(.+?)\n\n#s", file_get_contents("php://stdin"), $matches); echo trim($matches[2][0]);')

        # Use the multiline syntax for GitHub Actions output
        echo "changelog<<EOF" >> $GITHUB_OUTPUT
        echo "$t" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT
      shell: bash
    - name: Create Release
      id: create-release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: v${{ github.ref }}
        body: |
          ${{ steps.build-release.outputs.changelog }}
        draft: true
        prerelease: false
    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create-release.outputs.upload_url }}
        asset_path: ${{ steps.build-release.outputs.filepath }}
        asset_name: ${{ steps.build-release.outputs.filename }}
        asset_content_type: application/zip
